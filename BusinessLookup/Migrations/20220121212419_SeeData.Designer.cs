// <auto-generated />
using BusinessLookup.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusinessLookup.Migrations
{
    [DbContext(typeof(BusinessLookupContext))]
    [Migration("20220121212419_SeeData")]
    partial class SeeData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BusinessLookup.Models.Business", b =>
                {
                    b.Property<int>("BusinessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("State")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ZipCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("BusinessId");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            BusinessId = 1,
                            City = "Bothell",
                            Name = "Julio's",
                            State = "WA",
                            StreetAddress = "123 Street",
                            Type = "Restaurant",
                            ZipCode = "98021"
                        },
                        new
                        {
                            BusinessId = 2,
                            City = "Bellevue",
                            Name = "Best Flowers",
                            State = "WA",
                            StreetAddress = "Wonderful Street",
                            Type = "Florist",
                            ZipCode = "98023"
                        },
                        new
                        {
                            BusinessId = 3,
                            City = "Renton",
                            Name = "Shinny Clean",
                            State = "WA",
                            StreetAddress = "Main Street",
                            Type = "Dry Cleaner",
                            ZipCode = "98025"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
